trigger:
- main

pool:
  name: Default  # Ton agent auto-h√©berg√©

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'  # Utilisation de Node.js 12 compatible avec Angular 6
  displayName: 'Installer Node.js 12'

- script: |
    echo "üßπ Nettoyage des d√©pendances existantes"
    rm -rf package-lock.json node_modules
    npm cache clean --force
  workingDirectory: $(Build.SourcesDirectory)
  displayName: 'Nettoyer les d√©pendances'

- script: |
    echo "üì¶ Installation des d√©pendances"
    npm install --legacy-peer-deps
    npm rebuild node-sass
  workingDirectory: $(Build.SourcesDirectory)
  displayName: 'Installer les d√©pendances'

- script: |
    echo "‚öôÔ∏è Installation d'Angular CLI 6"
    npm install -g @angular/cli@6.0.8 --legacy-peer-deps
  displayName: 'Installer Angular CLI'

- script: |
    echo "üîç V√©rification de @angular/core et rxjs"
    npm list @angular/core rxjs || true
  workingDirectory: $(Build.SourcesDirectory)
  displayName: 'V√©rifier @angular/core et rxjs'

- script: |
    echo "üöÄ For√ßage de l'installation de @angular/core et rxjs"
    npm install @angular/core@6.0.3 rxjs@6.0.0 --legacy-peer-deps
  workingDirectory: $(Build.SourcesDirectory)
  displayName: 'Forcer l‚Äôinstallation de @angular/core et rxjs'

- script: |
    echo "‚öôÔ∏è D√©sactivation temporaire des erreurs TypeScript strictes"
    ng build --configuration production --aot=false --build-optimizer=false
  workingDirectory: $(Build.SourcesDirectory)
  displayName: 'Construire l‚Äôapplication Angular'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.SourcesDirectory)/dist'
    artifactName: 'drop'
  displayName: 'Publier les artefacts de build'
