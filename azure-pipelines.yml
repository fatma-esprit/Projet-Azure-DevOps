pool:
  name: Default  # Assure que l'agent utilis√© est bien celui du pool "Default"
  demands:
    - Agent.Name -equals AgentDevops  # V√©rifie que l'agent est bien "AgentDevops"

stages:
- stage: Build
  displayName: "üîß Construction"
  jobs:
  - job: Build_App
    displayName: "üì¶ Build de l'application"
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'  # Utilisation de Node.js 12 compatible avec Angular 6
      displayName: 'Installer Node.js 12'

    - script: |
        echo "üßπ Nettoyage des d√©pendances existantes"
        rm -rf package-lock.json node_modules
        npm cache clean --force
      workingDirectory: $(Build.SourcesDirectory)
      displayName: 'Nettoyer les d√©pendances'

    - script: |
        echo "üì¶ Installation des d√©pendances"
        npm install --legacy-peer-deps
        npm rebuild node-sass
      workingDirectory: $(Build.SourcesDirectory)
      displayName: 'Installer les d√©pendances'

    - script: |
        echo "‚öôÔ∏è Installation d'Angular CLI 6"
        npm install -g @angular/cli@6.0.8 --legacy-peer-deps
      displayName: 'Installer Angular CLI'

    - script: |
        echo "üîç V√©rification de @angular/core et rxjs"
        npm list @angular/core rxjs || true
      workingDirectory: $(Build.SourcesDirectory)
      displayName: 'V√©rifier @angular/core et rxjs'

    - script: |
        echo "üöÄ For√ßage de l'installation de @angular/core et rxjs"
        npm install @angular/core@6.0.3 rxjs@6.0.0 --legacy-peer-deps
      workingDirectory: $(Build.SourcesDirectory)
      displayName: 'Forcer l‚Äôinstallation de @angular/core et rxjs'

    - script: |
        echo "‚öôÔ∏è D√©sactivation temporaire des erreurs TypeScript strictes"
        ng build --configuration production --aot=false --build-optimizer=false
      workingDirectory: $(Build.SourcesDirectory)
      displayName: 'Construire l‚Äôapplication Angular'

    - powershell: |
        gci env:* | sort-object name | Format-Table -AutoSize | Out-File $env:BUILD_ARTIFACTSTAGINGDIRECTORY/environment-variables.txt
      displayName: 'Exporter les variables d‚Äôenvironnement'

    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)'
        contents: '**/$(BuildConfiguration)/**/?(*.exe|*.dll|*.pdb)'
        targetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copier les fichiers de build'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: drop
      displayName: 'Publier les artefacts de build'
