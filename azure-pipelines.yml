trigger:
- main

pool:
  name: Default  # Ton agent auto-h√©berg√©

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'  # Utilisation de Node.js 12 compatible avec Angular 6
  displayName: 'Installer Node.js 12'

- script: |
    echo "üîç V√©rification du r√©pertoire de travail"
    cd
    dir
  workingDirectory: $(Build.SourcesDirectory)
  displayName: 'Afficher le r√©pertoire et fichiers (Windows)'

- script: |
    echo "‚ôªÔ∏è Nettoyage du cache et des d√©pendances"
    rmdir /s /q node_modules
    del package-lock.json
    npm cache clean --force
    npm ci --legacy-peer-deps
    npm rebuild node-sass
  workingDirectory: $(Build.SourcesDirectory)
  displayName: 'Installer les d√©pendances'

- script: |
    echo "üöÄ Installation de Angular CLI"
    npm install -g @angular/cli@6.0.8 --legacy-peer-deps --force
    ng version
  displayName: 'Installer Angular CLI'

- script: |
    echo "üîß V√©rification des d√©pendances Angular"
    npm list @angular/core rxjs
  displayName: 'V√©rifier @angular/core et rxjs'

- script: |
    echo "üì• Installation forc√©e de @angular/core et rxjs si manquants"
    npm install @angular/core@6.0.3 rxjs@6.0.0 --legacy-peer-deps
  displayName: 'Forcer l‚Äôinstallation de @angular/core et rxjs'

- script: |
    echo "üèóÔ∏è Lancement du build Angular"
    ng build --configuration=production
  workingDirectory: $(Build.SourcesDirectory)
  displayName: 'Construire l‚Äôapplication Angular'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.SourcesDirectory)/dist'
    artifactName: 'drop'
  displayName: 'Publier les artefacts de build'
