pool:
  name: Default  
  demands:
    - Agent.Name -equals AgentDevops  

stages:
- stage: Build
  displayName: "🔧 Construction"
  jobs:
  - job: Build_App
    displayName: "📦 Build de l'application"
    steps:

    # 📌 Étape 1 : Préparer l'analyse SonarCloud
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: "SonarCloud"
        organization: "fatma-esprit"
        projectKey: "fatma-esprit_Projet-Azure-DevOps"
        projectName: "Projet Azure DevOps"
        scannerMode: "CLI"
        extraProperties: |
          sonar.projectKey=fatma-esprit_Projet-Azure-DevOps
          sonar.organization=fatma-esprit
          sonar.host.url=https://sonarcloud.io
          sonar.sources=.

    # 📌 Étape 2 : Installer Node.js
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
      displayName: 'Installer Node.js 12'

    # 📌 Étape 3 : Nettoyer les dépendances
    - script: |
        echo "🧹 Nettoyage des dépendances"
        rm -rf package-lock.json node_modules
        npm cache clean --force
      workingDirectory: $(Build.SourcesDirectory)
      displayName: 'Nettoyer les dépendances'

    # 📌 Étape 4 : Installer les dépendances
    - script: |
        echo "📦 Installation des dépendances"
        npm install --legacy-peer-deps
        npm rebuild node-sass
      workingDirectory: $(Build.SourcesDirectory)
      displayName: 'Installer les dépendances'

    # 📌 Étape 5 : Installer Angular CLI
    - script: |
        echo "⚙️ Installation d'Angular CLI 6"
        npm install -g @angular/cli@6.0.8 --legacy-peer-deps
      displayName: 'Installer Angular CLI'

    # 📌 Étape 6 : Vérifier les versions
    - script: |
        echo "🔍 Vérification de @angular/core et rxjs"
        npm list @angular/core rxjs || true
      workingDirectory: $(Build.SourcesDirectory)
      displayName: 'Vérifier @angular/core et rxjs'

    # 📌 Étape 7 : Forcer l’installation de @angular/core et rxjs
    - script: |
        echo "🚀 Forçage de l'installation de @angular/core et rxjs"
        npm install @angular/core@6.0.3 rxjs@6.0.0 --legacy-peer-deps
      workingDirectory: $(Build.SourcesDirectory)
      displayName: 'Forcer l’installation de @angular/core et rxjs'

    # 📌 Étape 8 : Construire l’application Angular
    - script: |
        echo "⚙️ Désactivation temporaire des erreurs TypeScript strictes"
        ng build --configuration production --aot=false --build-optimizer=false
      workingDirectory: $(Build.SourcesDirectory)
      displayName: 'Construire l’application Angular'

    # 📌 Étape 9 : Exécuter l’analyse SonarCloud
    - task: SonarCloudAnalyze@1
      displayName: "🔍 Exécuter l'analyse SonarCloud"

    # 📌 Étape 10 : Exécuter les tests unitaires
    - script: |
        echo "🧪 Exécution des tests"
        npm install --legacy-peer-deps
        npm run test
      displayName: 'Exécuter les tests unitaires'

    # 📌 Étape 11 : Publier les résultats des tests
    - task: PublishTestResults@2
      inputs:
        testResultsFiles: 'srctest-results/TEST-results.xml'
        testRunTitle: 'Résultats des tests du frontend'
        mergeTestResults: true
        failTaskOnFailedTests: true
      condition: always()
      displayName: 'Publier les résultats des tests'

    # 📌 Étape 12 : Construire et pousser l'image Docker 🐳
    - task: Docker@2
      inputs:
        containerRegistry: 'DockerHub'  # Remplacez par votre connexion à ACR si besoin
        repository: 'fatmaesprit/mon-app-angular'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: 'latest'

    # 📌 Étape 13 : Copier les fichiers de build
    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)'
        contents: '**/$(BuildConfiguration)/**/?(*.exe|*.dll|*.pdb)'
        targetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copier les fichiers de build'

    # 📌 Étape 14 : Publier les artefacts de build
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: drop
      displayName: 'Publier les artefacts de build'
