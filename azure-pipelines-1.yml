trigger:
- main

pool:
  name: Default  # Utilisation du pool d'agents auto-hébergés
  demands:
    - Agent.Name -equals agent-docker  # Utiliser ton agent Docker

variables:
  azureServiceConnection: 'Terraform-MI'  # Connexion de service Azure
  resourceGroupName: 'rg-angular-app'
  aksClusterName: 'aks-cluster'
  location: 'East US'

stages:
- stage: Terraform
  displayName: 'Terraform Deployment'
  jobs:
  - job: TerraformJob
    steps:
    - checkout: self

    - script: |
        echo "Vérification de Terraform..."
        terraform --version
      displayName: 'Check Terraform Installation'

    - script: |
        echo "Initializing Terraform..."
        terraform -chdir=terraform init
        terraform -chdir=terraform plan -out=tfplan
        terraform -chdir=terraform apply -auto-approve tfplan
      displayName: 'Terraform Apply'

- stage: DeployToAKS
  displayName: 'Deploy App to AKS'
  dependsOn: Terraform
  jobs:
  - job: Deploy
    steps:
    - checkout: self

    - script: |
        echo "Authenticating to Azure with Managed Identity..."
        az login --identity
        az aks get-credentials --resource-group $(resourceGroupName) --name $(aksClusterName) --overwrite-existing
        echo "Applying deployment.yaml"
        kubectl apply -f deployment.yaml
      displayName: 'Deploy Angular app to AKS'
