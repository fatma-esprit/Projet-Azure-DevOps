trigger:
  - main

pool:
  name: Default
  demands:
    - Agent.Name -equals AgentSelfHostedDevops

variables:
  - name: resourceGroupName
    value: 'rg-angular-app'
  - name: aksClusterName
    value: 'aks-cluster'
  - name: location
    value: 'East US'

stages:
- stage: Terraform
  displayName: 'Terraform Deployment using MSI'
  jobs:
  - job: TerraformJob
    displayName: 'Execute Terraform Commands via MSI'
    steps:
    - checkout: self

    - script: |
        echo "Test de Terraform depuis l'agent"
        where terraform
        terraform -v
      displayName: "Vérification Terraform dans l'agent"

    - script: |
        echo "Authentification à Azure via Managed Identity..."
        az login --identity
      displayName: 'Azure login with Managed Identity'

    - script: |
        echo "======== Terraform Init, Plan & Apply via MSI ========"
        cd terraform
        terraform init
        terraform plan -out=tfplan
        terraform apply -auto-approve tfplan
      displayName: 'Terraform Init, Plan & Apply with MSI'

- stage: DeployToAKS
  displayName: 'Deploy App to AKS'
  dependsOn: Terraform
  jobs:
  - job: Deploy
    displayName: 'Déploiement Angular vers AKS'
    steps:
    - checkout: self

    - script: |
        echo "Authentification à Azure via Managed Identity..."
        az login --identity
        az aks get-credentials --resource-group $(resourceGroupName) --name $(aksClusterName) --overwrite-existing
        echo "Déploiement des ressources avec deployment.yaml"
        kubectl apply -f deployment.yaml
      displayName: 'Deploy Angular App to AKS'
